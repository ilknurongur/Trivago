version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: tatilsiz-mongodb
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: trivagoDB
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ping: 1})' --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis: # Yeni Redis servisi eklendi
    image: redis:latest
    container_name: tatilsiz-redis
    restart: always
    ports:
      - '6379:6379'
    healthcheck: # Redis için healthcheck eklendi
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data # Verilerin kalıcı olması için volume eklendi

  backend:
    build: ./backend
    container_name: tatilsiz-backend
    restart: always
    ports:
      - '5000:5000'
    env_file:
      - ./backend/.env
    depends_on:
      mongo:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis: # Backend'in Redis'e bağımlılığı eklendi
        condition: service_healthy
    command: ["node", "server.js"]

volumes:
  mongodb_data:
  redis_data: # Yeni Redis volume'u eklendi
